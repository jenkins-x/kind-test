name: Create Cluster

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  create-cluster:
    runs-on: macos-latest
    steps:

      - name: Public IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Print Public IP
        run: |
          echo ${{ steps.ip.outputs.ipv4 }}
          echo ${{ steps.ip.outputs.ipv6 }}

      - uses: docker-practice/actions-setup-docker@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - run: |
          set -x

          docker version

          docker run --rm hello-world
          
          docker login -u $DOCKER_USERNAME. -p $DOCKER_PASSWORD

      - name: Create Kubernetes cluster
        run: |
          brew install kind
          cat <<EOF | kind create cluster --wait 5m --config=-
          kind: Cluster
          apiVersion: kind.x-k8s.io/v1alpha4
          nodes:
          - role: control-plane
            kubeadmConfigPatches:
            - |
              kind: InitConfiguration
              nodeRegistration:
                kubeletExtraArgs:
                  node-labels: "ingress-ready=true"
            extraPortMappings:
            - containerPort: 80
              hostPort: 80
              protocol: TCP
            - containerPort: 443
              hostPort: 443
              protocol: TCP

          EOF

#       - name: Create Kubernetes cluster
#         run: |
        
#           curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.11.1/kind-linux-amd64
#           chmod +x ./kind
#           echo $PATH
#           mkdir -p /home/runner/.local/bin
#           mv ./kind /home/runner/.local/bin/
#           cat <<EOF | kind create cluster --wait 5m --config=-
#           kind: Cluster
#           apiVersion: kind.x-k8s.io/v1alpha4
#           nodes:
#           - role: control-plane
#             kubeadmConfigPatches:
#             - |
#               kind: InitConfiguration
#               nodeRegistration:
#                 kubeletExtraArgs:
#                   node-labels: "ingress-ready=true"
#             extraPortMappings:
#             - containerPort: 80
#               hostPort: 80
#               protocol: TCP
#             - containerPort: 443
#               hostPort: 443
#               protocol: TCP

#           EOF


#       - name: Install
#         run: |
#           docker network inspect -f '{{.IPAM.Config}}' kind

#           VERSION=$(curl https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/stable.txt)
#           kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/${VERSION}/deploy/static/provider/kind/deploy.yaml  
          
#           kubectl wait --namespace ingress-nginx   --for=condition=ready pod   --selector=app.kubernetes.io/component=controller  --timeout=90s
          
          
#       - name: Curl
#         run: |
#           curl -v http://${{ steps.ip.outputs.ipv4 }}.nip.io
